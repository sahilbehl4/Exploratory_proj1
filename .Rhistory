-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version=="3.0.2",country=="IN")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="IN"|country|=="US")
filter(cran,country=="IN"|country=="US")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-arrange(select(cran,ip_id))
cran2<-arrange(select(cran,size:ip_id))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10,correct_size=size+1000)
mutate(cran3,,correct_size=size+1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
data frame tbl<-tbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(my_package,mean(size))
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
seprate(res,sex,class,-grade,-count)
separate(res,sex,class,-grade,-count)
?separate
separate(res,sex,sex_class,c("sex","class"))
separate(res,sex_class,c("sex","class"))
submit()
submit()
sutdents
sutdents3
sutdents3
students3
submit()
?gather
submit()
submit()
reset()
swirl()
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(readr)
parse_number("class5")
?mutate
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
package_version('dplyr')
package_version("dplyr")
packageVersion("dplyr")
bind_rows(passed,failed)
sat
submit()
submit()
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "quiz.csv",method = "curl")
ques1<-read.csv("quiz.csv")
library("dplyr")
df<-tbl_df(ques1)
df
df1<-select(df,SERIALNO,AGS,ACR)
df1
filter(df1,AGS==6,ACR==6)
df1<-filter(df1,AGS==6,ACR==6)
df1
df1<-filter(df1,AGS==6,ACR==3)
df1
df1<-select(df,SERIALNO,AGS,ACR)
tail(df1)
summary(df1)
agricultureLogical=AGS==6&ACR==3
agricultureLogical=ques1$AGS==6&ques$ACR==3
agricultureLogical=ques1$AGS==6&ques1$ACR==3
which(agricultureLogical)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "quiz.csv",method = "curl")
gdp<-read.csv("quiz.csv")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile = "quiz.csv",method = "curl")
edu<-read.csv("quiz.csv")
gdp<-tbl_df(gdp)
edu<-tbl_df(edu)
gdp
edu
names(gdp)
names(edu)
match<-merge(gdp,edu,by.x = "X",by.y = "CountryCode",all=TRUE)
match
dim(gdp)
gdp=gdp[5:330,]
gdp
match<-merge(gdp,edu,by.x = "X",by.y = "CountryCode",all=TRUE)
match
head(match)
match<-merge(gdp,edu,by.x = "X",by.y = "CountryCode")
match
?merge
arrange(match,desc("Gross.domestic.product.2012"))
match<-tbl_df(match)
match''
match
arrange(match,desc("Gross.domestic.product.2012"))
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
?lubridate
help(package=lubridate)
this_day<-today
this_day<-today()
this_day
year(this_day)
wday(this_day())
wday(this_day
)
wday(this_day,label = TRUE)
now()
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1985-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1<-ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
update(this_moment,hours=2,minutes=26)
update(this_moment,hours=10,minutes=16)
update(this_moment,hours=10,minutes=16,seconds=0)
this_moment<-update(this_moment,hours=10,minutes=16,seconds=0)
this_moment
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours<-17,minutes<-34)
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hour(15)+minute(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_kong")
arrive<-with_tz(arrive,"Asia/Hong_kong")
arrive<-with_tz(arrive,"Asia/Hong_kong")
info()
skip()
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?interval
interval(last_time)
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
library("swirl")
swirl()
install.packages("ggplot2")
swirl()
plot.new()
par(mar = rep(2, 4))
plot.new()
swirl()
par(mar = rep(2, 4))
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
View(cran2)
library(swirl)
swirl()
quantile(ppm)
boxplot(ppm,col = blues)
boxplot(ppm,col = "blue")
abline(h=12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppm,col = "green")
abline(v=12)
abline(v=12,lwd)
abline(v=12,lwd=2)
abline(v=12,lwd=4,col="magenta")
abline(v=median(ppm),lwd=4,col="magenta")
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1)
)
library(swirl)
swirl()
subset(pollution,pollution$region=="east")
east<-subset(pollution,pollution$region=="east")
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west"),col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pollution,pm25,region)
plot(pollution,pm25,latitude)
?plot
plot(pollution$pm25,pollutionlatitude)
plot(pollution$pm25,pollution$latitude)
with(pollution,plot(latitide,pm25))
with(pollution, plot(latitide,pm25))
with(pollution, plot(latitude,pm25))
abline(v=12)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
?par
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="EAST")
plot(east$latitude,east$pm25,main="East")
?Devices
plot(eruptions,waiting)
faithful
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off
dev.off()
head(cars)
with(cars,plot(spped,distance))
with(cars,plot(speed,distance))
with(cars,plot(speed,dist))
text(mean(cars$speed),mean(cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
state$region
table(state$region)
xyplot()
xyplot(Life.Exp ~ Income | region,data = state,c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(disp,hwy,mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,mpg)
?qplot
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
table(Ozone~Month,airquality)
bozplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone)
)
title(main = "Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,airquality$Ozone,type ="n")
title(main = "")
title(main = "Wind and Ozone in NYC")
may<-subset(airquality,airquality$Month==5)
may<-subset(airquality,Month==5)
?points
pch
pch = 0:18
points( may$Wind, may$Ozone, pch=17, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=18)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",c(17,18),c("blue","red"),c("May","Other Months"))
legend("topright",pch = c(17,18),col= c("blue","red"),legend = ("May","Other Months"))
legend("topright",pch = c(17,18),col= c("blue","red"),legend = c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
lines(v=median(airquality$Wind),lty=2)
lines(v=median(airquality$Wind),lty=2)
lines(v=median(airquality$Wind),lty=2)
lines(v=median(airquality$Wind),lty=2)
lines(x=0,y=median(airquality$Wind),lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot()
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main = "Ozone and Temperature")
mtext("Ozone and weather in New ")
mtext("Ozone and weather in New York City")
mtext("Ozone and weather in New York City",outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE).
mtext("Ozone and Weather in New York City", outer = TRUE)
dir("\sahilbehl\desktop\DSS")
dir("sahilbehl/desktop/DSS")
dir()
setwd("Desktop/DSS")
dir()
data<-read.table("household_power_consumption.txt")
data<-read.table("household_power_consumption.txt",nrows = 2075259)
head(data)
data<-read.table("household_power_consumption.txt")
head(data)
data<-read.table("household_power_consumption.txt",header=TRUE,sep = ";")
head(data)
data1<-data
data1$Date<-strptime(data1$Date,"%D")
head(data1)
data1<-data
head(data1)
data_full <- read.table("household_power_consumption.txt", header=T, sep=';', na.strings="?",nrows=2075259)
data<-data_full
head(data)
data$Date<-as.Date(data$Date,format="%d/%m/%Y")
head(data)
data1<-subset(data,data$Date<="2007-02-01")
head(data1)
tail(data1)
data1<-subset(data,data$Date>="2007-02-01")
head(data1)
data1<-subset(data1,data1$Date<="2007-02-02")
head(data1)
tail(data1)
dim(data1)
?hist
hist(data1$Global_active_power)
col("red")
?par
par(col="red")
par(xlab="Global Active Power (Killowatts)")
par("col")
head(wdays(data$Date)
)
head(wday(data$Date))
class(data$Date)
wday("2007-02-01")
wday(data[1,1])
data[1,1]
wday(data1[1,1])
plot(data1$Global_active_power~data1$Date)
plot(data1$Global_active_power~data1$Date,type="l")
plot(data1$Global_active_power~data1$,type="l")
dir()
setwd("Exploratory Data Project 1 ")
data_full <- read.table("../household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259)
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
hist(data$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259)
data_full <- read.csv("../household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259)
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="",col="black")
par("col")
par("col")="black"
par(col="black")=
par$col="black"
par$col
par(col="black")
par$col
par("col")
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="",col="black")
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
with(data,plot(Sub_metering_1~Datetime, type="l",ylab="Global Active Power (kilowatts)", xlab=""))
with(data, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(data, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(Voltage~Datetime, type="l",
ylab="Voltage (volt)", xlab="")
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Global_reactive_power~Datetime, type="l",
ylab="Global Rective Power (kilowatts)",xlab="")
})
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
